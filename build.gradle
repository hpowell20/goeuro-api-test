plugins {
	id "org.sonarqube" version "2.6.2"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'

sonarqube {
	properties {
		property "sonar.projectName", "GoEuro API Test Application"
		property "sonar.sourceEncoding", "UTF-8"
	}
}

jacoco {
	// Tool version based on the maven dependency for org.jacoco:org.jacoco.build	
    toolVersion = '0.8.1'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
	logbackVersion = '1.2.3'
	slf4jApiVersion = '1.7.25'
	groovyVersion = '2.4.15'
	httpClientVersion = '4.5.5'
	apacheCsvVersion = '1.5'
	jsonVersion = '20180130'
	guavaVersion = '24.1-jre'
	
	hamcrestVersion = '1.3'
	junitVersion = '4.12'
	mockitoVersion = '2.7.17'
}

repositories {
	mavenCentral()
}

dependencies {
	compile "ch.qos.logback:logback-core:$logbackVersion",
			"ch.qos.logback:logback-classic:$logbackVersion",
			"org.slf4j:slf4j-api:$slf4jApiVersion",
			"org.codehaus.groovy:groovy-all:$groovyVersion",
			"org.apache.httpcomponents:httpclient:$httpClientVersion",
			"org.apache.commons:commons-csv:$apacheCsvVersion",
			"org.json:json:$jsonVersion",
	        "com.google.guava:guava:$guavaVersion"
	
	testCompile "org.hamcrest:hamcrest-all:$hamcrestVersion",
				"junit:junit:$junitVersion",
				"org.mockito:mockito-core:$mockitoVersion"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

jar {
	baseName 'GoEuroTest'
	
	from { 
		configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } 
	}
	manifest {
		attributes "Main-Class" : "com.goeuro.test.Main"
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.7'
}
